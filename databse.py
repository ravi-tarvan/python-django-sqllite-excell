from Tkinter import *
import sqlite3
import Tkinter
import  tkMessageBox
import ttk
from datetime import*
import xlsxwriter
from databse import add_c,add_cc


root = Tk()
root.title("Balaji Pakaging")
screen_width = root.winfo_screenwidth()
screen_height = root.winfo_screenheight()
width = 1050
height = 600
x = (screen_width / 2) - (width / 2)
y = (screen_height / 2) - (height / 2)
root.geometry('%dx%d+%d+%d' % (width, height, x, y))



# ==================================METHODS============================================
def Database():
    global conn, cursor
    conn = sqlite3.connect('pythontut.db')
    cursor = conn.cursor()
    cursor.execute(
        "CREATE TABLE IF NOT EXISTS `company` (mem_id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, Name TEXT, GSTIN TEXT, Address1 TEXT, Address2 TEXT, Address3 TEXT,Address4 TEXT,Address5 TEXT, State Address VARCHAR(15), p_terms INT)")


def add1():
    a=add_cc()

def Read():
    tree.delete(*tree.get_children())
    Database()
    cursor.execute("SELECT * FROM `company` ORDER BY `Name` ASC")
    fetch = cursor.fetchall()
    for data in fetch:
        tree.insert('', 'end', values=(data[1], data[2], data[3], data[4], data[5], data[6],data[7],data[8],data[9]))
    cursor.close()
    conn.close()
    #txt_result.config(text="Successfully read the data from database", fg="black")


def Exit():
    result = tkMessageBox.askquestion('Balaji packging', 'Are you sure you want to exit?', icon="warning")
    if result == 'yes':
        root.destroy()
        exit()



# ==================================VARIABLES==========================================
Name = StringVar()
GSTIN = StringVar()
Address1 = StringVar()
Address2 = StringVar()
Address3 = StringVar()
Address4 = StringVar()
Address5 = StringVar()
p_terms= StringVar()
state = StringVar()
PASSWORD = StringVar()

def write_to_xlsx():
    todays_date = "" + datetime.now().strftime("%Y-%m-%d %H:%M") + '.xlsx' + ""
    workbook = xlsxwriter.Workbook(todays_date)
    worksheet = workbook.add_worksheet()
#worksheet.write('H11',e1.get)
    format9=workbook.add_format()
    format9.set_align('center')
    worksheet.write_string('H11', e1.get(),format9)
    format10 = workbook.add_format()
    format10.set_align('center')
    format10.set_size(23)
    format10.set_text_wrap()
    format10.set_bold()
    format10.set_border()
    worksheet.merge_range('I11:I12', e2.get(), format10)
    bold = workbook.add_format({'bold': True})
    format = workbook.add_format()
# format.set_bold(10)
    format.set_font_size(25)
    format.set_align('center')
    format.set_border()
    format1 = workbook.add_format()
    #gstin
    format11 = workbook.add_format()
    format11.set_align('center')
    format11.set_size(18)
    format11.set_text_wrap()
    format11.set_bold()
    format11.set_border()
    worksheet.merge_range('F14:I15','GSTIN:-29AAAHR9245N1ZF',format11)
    #date border
    worksheet.merge_range('A10:H10','   ',format10)
    worksheet.write('H12', '   ', format10)
    #f16-h16
    format12 = workbook.add_format()
    format12.set_font_name('Times New Roman')
    format12.set_size(18)
    format12.set_text_wrap()
    format12.set_bold()
    worksheet.merge_range('F16:H16', 'Name of the Excisable commodity', format12)
    format13 = workbook.add_format()
    format13.set_font_name('Times New Roman')
    format13.set_size(14)
    format13.set_text_wrap()
    format13.set_right()
    worksheet.write_string('I16',': CORRUGATED BOX',format13)
#f18-i18
    format18f= workbook.add_format()
    format18f.set_size(18)
    format18f.set_align('center')
    worksheet.merge_range('F18:I18',"HSN CODE:-Corrugated Box's:-4819",format18f)
    worksheet.merge_range('F20:I20', "HSN CODE:-SCRAP Paper:-4707", format18f)
#customer gstin
    format17f=workbook.add_format()
    format17f.set_size(18)
    format17f.set_border()
    format17f.set_font_name('Times New Roman')
    #format17f.set_bold()
    worksheet.merge_range('A17:C17', 'GSTIN:-', format17f)
    worksheet.merge_range('A18:C18','Terms of Payment:-',format17f)
    worksheet.merge_range('A19:C19', 'P.O no:-', format17f)
    worksheet.merge_range('A20:C20', 'State:-', format17f)

    worksheet.merge_range('D17:E17', '29AELPJ8376SF1ZY', format17f)
    worksheet.merge_range('D18:E18', '30 DAYS', format17f)
    worksheet.merge_range('D19:E19', 'Verbal', format17f)
    worksheet.merge_range('D20:E20', 'Karnataka', format17f)
#vechicle no
    format1v=workbook.add_format()
    format1v.set_border()
    format1v.set_size(14)
    worksheet.merge_range('F22:G22','Vechicle No',format1v)
    format2v=workbook.add_format()
    format2v.set_bold()
    format2v.set_border()
    format2v.set_size(16)
    format2v.set_align('center')
    worksheet.merge_range('H22:I22',e.get(),format2v)
    worksheet.merge_range('A22:E22','      ',format2v)
#product detail
    format3pd=workbook.add_format()
    format3pd.set_border()
    format3pd.set_size(15)
    format3pd.set_text_wrap()
    format3pd.set_font_name('Times New Roman')
    worksheet.merge_range('A23:A24','Sl NO',format3pd)
    format4pd=workbook.add_format()
    format4pd.set_border()
    format4pd.set_font_name('Times New Roman')
    format4pd.set_bold()
    format4pd.set_text_wrap()
    format4pd.set_size(15)
    format5pd = workbook.add_format()
    format5pd.set_border()
    format5pd.set_font_name('Times New Roman')
    format5pd.set_text_wrap()
    worksheet.merge_range('B23:E24','   Description of sepecification of Goods'
                          '                                               ',format4pd)
    worksheet.merge_range('F23:F24','Number and Description of packages',format5pd)
    worksheet.merge_range('G23:G24','Total Quantity of Goods',format5pd)
    worksheet.merge_range('H23:H24','Assessable Tariff Value per Unit        Rs \n ',format5pd)
    worksheet.merge_range('I23:I24','Total Assessable Tariff Value of Goods Rs\n',format5pd)
#Table .......table
    format_p=workbook.add_format()
    format_p.set_right()
    format_p.set_size(18)
    format_p.set_bold()
    worksheet.write('A25','',format_p)
    worksheet.write('A26', '',format_p)
    worksheet.write('A27', '',format_p)
    worksheet.write('A28', '',format_p)
    worksheet.write('A29', '',format_p)
    worksheet.write('A30', '',format_p)
    worksheet.write('A31', '',format_p)
    worksheet.write('A32', '',format_p)
    worksheet.write('A33', '',format_p)
    worksheet.write('A34', '',format_p)
    worksheet.write('A35', '',format_p)
    worksheet.write('A36', '',format_p)
    #2nd
    worksheet.merge_range('B25:E25', '',format_p)
    worksheet.merge_range('B26:E26', '',format_p)
    worksheet.merge_range('B27:E27', '',format_p)
    worksheet.merge_range('B28:E28', '',format_p)
    worksheet.merge_range('B29:E29', '',format_p)
    worksheet.merge_range('B30:E30', '',format_p)
    worksheet.merge_range('B31:E31', '',format_p)
    worksheet.merge_range('B32:E32', '',format_p)
    worksheet.merge_range('B33:E33', '',format_p)
    worksheet.merge_range('B34:E34', '',format_p)
    worksheet.merge_range('B35:E35', '',format_p)
    worksheet.merge_range('B36:E36', '',format_p)
    worksheet.write('F25', del6.get(),format_p)
    worksheet.write('F26', '',format_p)
    worksheet.write('F27', '',format_p)
    worksheet.write('F28', '',format_p)
    worksheet.write('F29', '',format_p)
    worksheet.write('F30', '',format_p)
    worksheet.write('F31', '',format_p)
    worksheet.write('F32', '',format_p)
    worksheet.write('F33', '',format_p)
    worksheet.write('F34', '',format_p)
    worksheet.write('F35', '',format_p)
    worksheet.write('F36', '',format_p)

    worksheet.write('G25', del7.get(),format_p)
    worksheet.write('G26', '',format_p)
    worksheet.write('G27', '',format_p)
    worksheet.write('G28', '',format_p)
    worksheet.write('G29', '',format_p)
    worksheet.write('G30', '',format_p)
    worksheet.write('G31', '',format_p)
    worksheet.write('G32', '',format_p)
    worksheet.write('G33', '',format_p)
    worksheet.write('G34', '',format_p)
    worksheet.write('G35', '',format_p)
    worksheet.write('G36', '',format_p)

    worksheet.write('H25', '',format_p)
    worksheet.write('H26', '',format_p)
    worksheet.write('H27', '',format_p)
    worksheet.write('H28', '',format_p)
    worksheet.write('H29', '',format_p)
    worksheet.write('H30', '',format_p)
    worksheet.write('H31', '',format_p)
    worksheet.write('H32', '',format_p)
    worksheet.write('H33', '',format_p)
    worksheet.write('H34', '',format_p)
    worksheet.write('H35', '',format_p)
    worksheet.write('H36', '',format_p)

    total = int(del7.get()) * int(del6.get())
    worksheet.write('I25',total,format_p)
    worksheet.write('I26', '',format_p)
    worksheet.write('I27', '',format_p)
    worksheet.write('I28', '',format_p)
    worksheet.write('I29', '',format_p)
    worksheet.write('I30', '',format_p)
    worksheet.write('I31', '',format_p)
    worksheet.write('I32', '',format_p)
    worksheet.write('I33', '',format_p)
    worksheet.write('I34', '',format_p)
    worksheet.write('I35', '',format_p)
    worksheet.write('I36', '',format_p)

#electronic
    format121 = workbook.add_format()
    format121.set_font_name('Times New Roman')
    format121.set_size(18)
    format121.set_text_wrap()
    format121.set_bold()
    format121.set_border()
    worksheet.merge_range('A37:F37','Electronic Reference Number:- N/A',format121)
    worksheet.merge_range('G37:H37','Total Assessable Value',format121)
#A38-f41
    format_terms=workbook.add_format()
    format_terms.set_text_wrap()
    format_terms.set_border()
    worksheet.merge_range('A38:F41','TERMS:-   1. No Claim for Shortage, Damage etc.will be entertained after\n goods leave  our premises if not insured.\n2.Any discrepancy should be made with in a WEEk else goods will be \nconsidered as received correct. \n3. For bill  unpaid for the Month interest at 24% per annum will be charged. \nSubject to Bangalore Jurisdiction.',format_terms)
#39-41 gh
    format_gst=workbook.add_format()
    format_gst.set_size(15)
    format_gst.set_border()
    worksheet.merge_range('G39:H39','CGST @6',format_gst)
    worksheet.merge_range('G41:H41', 'SGST @6',format_gst)
#cell setting
    worksheet.set_column(0, 0, 3)
    worksheet.set_column(1, 1, 9)
    worksheet.set_column(2, 3, 8)
    worksheet.set_column(4, 4, 21)
    worksheet.set_column(5, 5, 12)
    worksheet.set_column(6, 6, 9)
    worksheet.set_column(7, 7, 17)
    worksheet.set_column(8, 8, 22)
    format1.set_font_size(16)
    worksheet.set_row(5, 18)
    worksheet.set_row(10, 18)
    worksheet.set_row(15, 18)
    worksheet.set_row(17, 21)
    worksheet.set_row(19, 21)
    worksheet.set_row(16, 21)
    worksheet.set_row(18, 21)
    worksheet.set_row(21, 18)
    worksheet.set_row(23, 21)
    worksheet.set_row(24, 21)
    worksheet.set_row(25, 21)
    worksheet.set_row(26, 21)
    worksheet.set_row(27, 21)
    worksheet.set_row(28, 21)
    worksheet.set_row(29, 21)
    worksheet.set_row(30, 21)
    worksheet.set_row(31, 21)
    worksheet.set_row(32, 21)
    worksheet.set_row(33, 21)
    worksheet.set_row(34, 21)
    worksheet.set_row(35, 21)
    worksheet.set_row(36, 21)
    worksheet.set_row(37, 21)
    worksheet.set_row(38, 21)
    worksheet.set_row(39, 21)
    worksheet.set_row(40, 21)
    worksheet.set_row(41, 21)
    worksheet.set_row(10, 21)
    worksheet.set_row(11, 21)
    worksheet.set_row(12, 21)
    worksheet.set_row(13, 21)
    worksheet.set_row(14, 21)
    worksheet.set_row(15, 21)
    worksheet.set_row(16, 21)
    worksheet.set_row(17, 21)
    worksheet.set_row(18, 21)
    worksheet.set_row(19, 21)

    format6 = workbook.add_format()
    format6.set_border()
    format1.set_font_name('Times New Roman')
    worksheet.merge_range('A7:H8', '          .   TAX Invoice', format)
    worksheet.write(5, 4, '                   ||OM GANESHAYA NAMHA||', format1)
    # part3
    format3 = workbook.add_format()
    format3.set_font_color('red')
    format3.set_font_size(10)
    format3.set_border()
    worksheet.write_string(6, 8, 'orignal for Buyer', format3)
    worksheet.write_string(7, 8, 'Duplicate for Transport', format3)
    worksheet.write_string(8, 8, 'Triplicate  for Assessee', format3)
    worksheet.write_string(9, 8, 'Extra copy/Extra copy||', format3)
    format4 = workbook.add_format()
    format4.set_text_wrap()
    format4.set_border()
    format5 = workbook.add_format()
    format4.set_font_size(13)
    format5.set_bold()
    format7 = workbook.add_format()
    format7.set_bold()
    format7.set_border()
    worksheet.merge_range('A11:E11', 'Name and Address od Consignee :', format7)

    worksheet.merge_range('A12:E16',del1.get(),format4)
    worksheet.merge_range('F11:G11', 'Date and Time of Invoice', format6)
    worksheet.merge_range('F12:G12', 'Date and Time Removal', format6)
    format8 = workbook.add_format()
    format8.set_border()
    format8.set_size(10.5)
    format8.set_text_wrap()
    format8.set_shrink()
    worksheet.merge_range('A44:I45',
                          ' Certificate that particulars given above are true and correct and the amounts indicated  represent the price actually charged and that '
                          'there is no additional consideration directly or indirectly from the buyer.ANY REJECTION OR SHORT RECIPT KINDLY CONTACT WITHIN 24HR '
                          , format8)
    workbook.close()

# ==================================FRAME==============================================
Top = Frame(root, width=900, height=50,bg="blue", bd=8, relief="raise")
Top.pack(side=TOP)
#Top.config(Background="blue")
Left = Frame(root, width=900, height=600, bd=8, relief="raise")
Left.pack(side=BOTTOM)
Right = Frame(Left, width=900, height=100, bd=8, relief="raise")
Right.pack(side=BOTTOM)
#Right1 = Frame(root, width=600, height=100, bd=8, relief="raise")
#Right1.pack(side=RIGHT)
Forms = Frame(Left, width=900, height=200)
Forms.pack(side=TOP)
#Buttons = Frame(Right1, width=300, height=100, bd=8, relief="raise")
#Buttons.pack(side=TOP)
#RadioGroup = Frame(Forms)
#Male = Radiobutton(RadioGroup, text="Male", variable=GENDER, value="Male", font=('arial', 16)).pack(side=LEFT)
#Female = Radiobutton(RadioGroup, text="Female", variable=GENDER, value="Female", font=('arial', 16)).pack(side=LEFT)

# ==================================LABEL WIDGET=======================================
txt_title = Label(Top, width=900,fg="white",font=('Times New Roman', 24),bg="blue", text="Balaji Pakaging")
txt_title.pack()
"""txt_firstname = Label(Forms, text="Name:", font=('arial', 16), bd=15)
txt_firstname.grid(row=0, stick="e")
txt_lastname = Label(Forms, text="GSTIN:", font=('arial', 16), bd=15)
txt_lastname.grid(row=1, stick="e")
txt_gender = Label(Forms, text="Address:", font=('arial', 16), bd=15)
txt_gender.grid(row=2, stick="e")
txt_address = Label(Forms, text="Payment Terms", font=('arial', 16), bd=15)
txt_address.grid(row=7, stick="e")
txt_username = Label(Forms, text="State", font=('arial', 16), bd=15)
txt_username.grid(row=8, stick="e")
#txt_password = Label(Forms, text="Payment terms:", font=('arial', 16), bd=15)
#txt_password.grid(row=9, stick="e")
txt_result = Label(Buttons)
txt_result.pack(side=TOP)

# ==================================ENTRY WIDGET=======================================
firstname = Entry(Forms, textvariable=Name, width=30)
firstname.grid(row=0, column=1)
lastname = Entry(Forms, textvariable=GSTIN, width=30)
lastname.grid(row=1, column=1)
#RadioGroup.grid(row=2, column=1)
address1 = Entry(Forms, textvariable=Address1, width=30)
address1.grid(row=2, column=1)
address2 = Entry(Forms, textvariable=Address2, width=30)
address2.grid(row=3, column=1)
address3 = Entry(Forms, textvariable=Address3, width=30)
address3.grid(row=4, column=1)
address4 = Entry(Forms, textvariable=Address4, width=30)
address4.grid(row=5, column=1)
address5 = Entry(Forms, textvariable=Address5, width=30)
address5.grid(row=6, column=1)
state = Entry(Forms, textvariable=state, width=30)
state.grid(row=7, column=1)
pterms = Entry(Forms, textvariable=p_terms,  width=30)
pterms.grid(row=8, column=1)"""
l3 = Label(Forms, text="||OM GANESHAYA NAMAHA||")
l3.grid(row=0, column=0, columnspan=100, rowspan=1,
               sticky=W+E+N+S, padx=15, pady=5)
    #date
l3 = Label(Forms, text="Date")
l3.grid(row=0, column=4, columnspan=100, rowspan=1,
            sticky=W, padx=15, pady=5)
e1 = Entry(Forms)
e1.grid(row = 1, column = 4, sticky = W, padx = 10)
e1.insert(0, str(datetime.today().strftime('%d-%m-%y')))
   # datetime.datetime.today().strftime('%Y-%m-%d')

e = Entry(Forms, width = 15)
e.grid(row = 1, column = 1, sticky = N, padx = 10)
l = Label(Forms, text = "Enter vehicle no")
l.grid(row = 1, column = 0, sticky = W, padx = 10)

e2 = Entry(Forms, width=15)
e2.grid(row = 2, column = 1, sticky = N, padx = 10)
l2 = Label(Forms, text = "ENTER BILL NUMBER")
l2.grid(row = 2, column = 0, sticky = W, padx = 10)
#for deliver address
adr= Label(Forms, text="Company and address")
adr.grid(row=3, column=0, sticky=N, padx=10)
#del1=AutocompleteEntry(autocompleteList, c, listboxLength=6, width=32, matchesFunction=matches)
    #del1.grid(row=3,column=1,sticky = W, padx  10)
del1 = Entry(Forms,width=15)
del1.grid(row=3, column=1, sticky=W, padx=10)
"""del11 = Entry(Forms,width=15)
del11.grid(row=3, column=2, sticky=W, padx=10)
del111 = Entry(Forms,width=15)
del111.grid(row=3, column=3, sticky=W, padx=10)"""

# ==================================BUTTONS WIDGET=====================================
#btn_create = Button(Buttons, width=10, text="Create", command=Create)
#btn_create.pack(side=LEFT)
"""btn_read = Button(Buttons, width=10, text="Read", command=Read)
btn_read.pack(side=LEFT)
btn_update = Button(Buttons, width=10, text="Update", state=DISABLED)
btn_update.pack(side=LEFT)
btn_delete = Button(Buttons, width=10, text="Delete", state=DISABLED)
btn_delete.pack(side=LEFT)
btn_exit = Button(Buttons, width=10, text="Exit", command=Exit)
btn_exit.pack(side=LEFT)"""
l6 = Label(Forms, text=" quantity")
l6.grid(row=8, column=0, columnspan=120, rowspan=1,
            sticky=W, padx=15, pady=5)
l7 = Label(Forms, text="unit price")
l7.grid(row=9, column=0, columnspan=120, rowspan=1,
            sticky=W, padx=15, pady=5)
del7=IntVar()
del6 = IntVar()
total = sum(int(e.get()) for e in (del6, del7))

del6 = Entry(Forms,width=15)
del6.grid(row=8, column=1, sticky=N,padx=10,pady=10)
del7 = Entry(Forms, width=15)
del7.grid(row=9, column=1, sticky=W, padx=10)
a = del6.get()

b = Button(Forms, text = "Show",command = Read)
b.grid(row = 10, column = 2, sticky = W, padx = 10)
b1 = Button(Forms, text="Submit", command=write_to_xlsx)
b1.grid(row=10, column=1, sticky=W, padx=10)
b2 = Button(Forms, text="Add customer",command=add_c)
b2.grid(row=10, column=3, sticky=W, padx=10)
b3 = Button(Forms, text="Add project",command=add_cc)
b3.grid(row=10, column=4, sticky=W, padx=10)

# ==================================LIST WIDGET========================================
scrollbary = Scrollbar(Right, orient=VERTICAL)
scrollbarx = Scrollbar(Right, orient=HORIZONTAL)
tree = ttk.Treeview(Right, columns=("Name", "GSTIN", "Address", "Address2", "Address3", "Address4", "Address5","State", "Payment Terms"),
                    selectmode="extended", height=6, yscrollcommand=scrollbary.set, xscrollcommand=scrollbarx.set)
scrollbary.config(command=tree.yview)
scrollbary.pack(side=RIGHT, fill=Y)
scrollbarx.config(command=tree.xview)
scrollbarx.pack(side=BOTTOM, fill=X)
tree.heading('Name', text="Name", anchor=W)
tree.heading('GSTIN', text="GSTIN", anchor=W)
tree.heading('Address', text="Address", anchor=W)
tree.heading('Address2', text="Address", anchor=W)
tree.heading('Address3', text="Address", anchor=W)
tree.heading('Address4', text="Address", anchor=W)
tree.heading('Address5', text="Address", anchor=W)
tree.heading('State', text="State", anchor=W)
tree.heading('Payment Terms', text="Payment Terms", anchor=W)
#tree.heading('Password', text="Password", anchor=W)
tree.column('#0', stretch=NO, minwidth=0, width=0)
tree.column('#1', stretch=NO, minwidth=0, width=80)
tree.column('#2', stretch=YES, minwidth=0, width=120)
tree.column('#3', stretch=NO, minwidth=0, width=80)
tree.column('#4', stretch=NO, minwidth=0, width=80)
tree.column('#5', stretch=NO, minwidth=0, width=80)
tree.column('#6', stretch=NO, minwidth=0, width=80)
tree.column('#7', stretch=NO, minwidth=0, width=80)
tree.column('#8', stretch=NO, minwidth=0, width=80)
#tree.column('#9', stretch=NO, minwidth=0, width=80)
#tree.column('#6', stretch=NO, minwidth=0, width=120)
tree.pack()


scrollbary = Scrollbar(Forms, orient=VERTICAL)
scrollbarx = Scrollbar(Forms, orient=HORIZONTAL)
tree1 = ttk.Treeview(Forms, columns=("company", "product", "price"),
                    selectmode="extended", height=3, yscrollcommand=scrollbary.set, xscrollcommand=scrollbarx.set)
scrollbary.config(command=tree.yview)
scrollbary.grid(row=4,column=4,sticky=N + S +W)
scrollbarx.config(command=tree.xview)
scrollbarx.grid(row=5,column=3,sticky=E+W)
tree1.heading('company', text="Company", anchor=W)
tree1.heading('product', text="Price", anchor=W)
tree1.heading('price', text="product", anchor=W)
#tree.heading('Password', text="Password", anchor=W)
tree1.column('#0', stretch=NO, minwidth=10, width=0)
tree1.column('#1', stretch=NO, minwidth=0, width=80)
tree1.column('#2', stretch=NO, minwidth=0, width=80)
#tree.column('#9', stretch=NO, minwidth=0, width=80)
#tree.column('#6', stretch=NO, minwidth=0, width=120)
tree1.grid(row=4,column=3)

# ==================================INITIALIZATION=====================================
if __name__ == '__main__':
    root.mainloop()
